#!/usr/bin/env bash
#
#  terminal_theme_change
#  Changes all open terminal tabs from dark to light theme, or vice versa
#
#  Created by Caius Durling on 2013-07-05.
#  Copyright 2013 . All rights reserved.
#


if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  echo "USAGE: $0 [light]"
  echo "Sets terminal theme to dark theme unless an argument is passed"
  exit 1
fi

DARK_THEME_NAME="Homebrew"
LIGHT_THEME_NAME="Basic"

if [[ -z $1 || "$1" == "dark" || "$1" == "--dark" ]]; then
  theme_name=$DARK_THEME_NAME
else
  theme_name=$LIGHT_THEME_NAME
fi

osascript -l JavaScript > /dev/null <<EOF
ThemeChanger = {
  application: Application("Terminal"),

  themeForName: function(theme_name) {
    return this.application.settingsSets.whose({name: theme_name})()[0]
  },

  tabsToChange: function() {
    _tabsToChange = []
    windows = this.application.windows()

    for (var i = 0; i < windows.length; i++) {
      w = windows[i]

      // Ideally we would be able to ask terminal for command windows only, but I'm fucked if I know how.
      // Attempt to grab the tabs instead, and skip the window if it errors
      try {
        tabs = w.tabs
        for (var j = 0; j < tabs.length; j++) {
          t = tabs[j]
          _tabsToChange.push(t)
        }
      } catch (e) {
      }
    }

    return _tabsToChange
  },

  changeTo: function(theme_name) {
    theme = this.themeForName(theme_name)

    this.application.defaultSettings = theme
    this.application.startupSettings = theme

    tabs = this.tabsToChange()

    for (var k = 0; k < tabs.length; k++) {
      t = tabs[k]
      t.currentSettings = theme
    }
  }
}

ThemeChanger.changeTo("${theme_name}")
EOF

echo "Changed terminal theme to ${theme_name}"
